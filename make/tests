# Without this, the shell history would not be very useful,
# since the configuration file is edited frequently.
show_config:
	cat $(config_file)

lag:
	bash bash/overview_lag.sh $(config_file)

diff:
	$(python_from_here) python/test/overview_diff.py \
          $(config_file)

# Some of these are defined in config_file.
# Others are derived therefrom.
show_params:
	echo "config_file: "           -$(config_file)-
	echo "subsample: "             -$(subsample)-
	echo "ss: "                    -$(ss)-
	echo "tax regime year: "       -$(yr)-
	echo "strategy: "              -$(strategy)-
	echo "strategy suffix: "       -$(strategy_suffix)-
	echo "strategy_year_suffix: "  -$(strategy_year_suffix)
	echo "vat_by_coicop: "         -$(vat_by_coicop)-
	echo "vat_by_capitulo_c: "     -$(vat_by_capitulo_c)-
	echo "marginal_rates_folder: " -$(marginal_rates_folder)-


##=## ##=## ##=## ##=## ##=##
##=## the run-after-every-change test suite
##=## ##=## ##=## ##=## ##=##

# Sufficiently simple and fast tests can stay in the master "tests" recipe here.
# But for any test complex enough to require an output file,
# make that output file a dependency.
# PITFALL: purchase_input.txt always uses the full sample
tests:							\
  rate_input_test \
  output/test/recip-$(ss)/households_1_agg_plus.txt	\
  output/test/recip-$(ss)/households_2_purchases.txt    \
  output/test/recip-$(ss)/build_classes.txt		\
  output/test/recip-$(ss)/build_purchases_2_vat.txt	\
  output/test/recip-$(ss)/build_purchase_sums.txt	\
  output/test/recip-1/build_ss_functions.txt		\
  output/test/recip-$(ss)/people_3_income_taxish.txt	\
  output/test/recip-$(ss)/common_misc.txt		\
  output/test/recip-$(ss)/common_util.txt		\
  output/test/recip-$(ss)/people_main.txt		\
  output/test/recip-$(ss)/people_2_buildings.txt	\
  output/test/recip-$(ss)/purchases_correct.txt		\
  output/test/recip-1/regime_r2018.txt              	\
  output/test/recip-$(ss)/vat_rates.txt			\
  output/test/recip-1/build_buildings.txt		\
  output/test/recip-1/purchase_inputs.txt
	printf '\nAll tests passed.\n\n'

common_test:							\
  exists/python/common/common_test.py
	$(python_from_here) python/common/common_test.py	\
          $(config_file)

rate_input_test: \
  exists/python/build/rate_input_test.py
	$(python_from_here) python/build/rate_input_test.py $(config_file)

output/test/recip-$(ss)/households_1_agg_plus.txt:	\
  $(households_1_agg_plus)				\
  exists/python/build/households_1_agg_plus_test.py
	date
	$(python_from_here) python/build/households_1_agg_plus_test.py	\
          $(config_file)

output/test/recip-$(ss)/households_2_purchases.txt:	\
  $(households_2_purchases)				\
  exists/python/build/households_2_purchases_test.py
	date
	$(python_from_here) python/build/households_2_purchases_test.py \
          $(config_file)

output/test/recip-$(ss)/build_classes.txt:	\
  exists/python/build/classes_test.py
	date
	$(python_from_here) python/build/classes_test.py \
          $(config_file)

output/test/recip-$(ss)/common_misc.txt:	\
  exists/python/common/misc_test.py
	date
	$(python_from_here) python/common/misc_test.py \
          $(config_file)

output/test/recip-$(ss)/common_util.txt:	\
  exists/python/common/util_test.py
	date
	$(python_from_here) python/common/util_test.py \
          $(config_file)

output/test/recip-$(ss)/purchases_correct.txt:	\
  $(purchases_1)				\
  exists/python/build/purchases/correct_test.py
	date
	$(python_from_here) python/build/purchases/correct_test.py \
          $(config_file)

output/test/recip-$(ss)/build_purchases_2_vat.txt:	\
  $(purchases_2_vat)					\
  exists/python/build/purchases_2_vat.py
	date
	$(python_from_here) python/build/purchases_2_vat_test.py \
          $(config_file)

output/test/recip-$(ss)/build_purchase_sums.txt:	\
  $(purchase_sums)					\
  exists/python/build/purchase_sums_test.py
	date
	$(python_from_here) python/build/purchase_sums_test.py	\
          $(config_file)

output/test/recip-$(ss)/people_main.txt: \
  $(people_1) \
  exists/python/build/people/main_test.py
	date
	$(python_from_here) python/build/people/main_test.py \
          $(config_file)

# PITFALL: for buildings.csv we always use subsample=1.
output/test/recip-1/build_buildings.txt:	\
  $(buildings)					\
  exists/python/build/buildings_test.py
	date
	$(python_from_here) python/build/buildings_test.py \
          $(config_file)

output/test/recip-$(ss)/people_2_buildings.txt:	\
  $(people_1)					\
  $(people_2_buildings)				\
  exists/python/build/people_2_buildings_test.py
	date
	$(python_from_here) python/build/people_2_buildings_test.py \
          $(config_file)

# TODO: Currently 2018 is tested, regardless of the actual regime-year.
# It would be better to have separate tests for each year.
output/test/recip-1/regime_r2018.txt:			\
  exists/python/regime/r2018_test.py
	date
	$(python_from_here) python/regime/r2018_test.py \
          $(config_file)

output/test/recip-1/build_ss_functions.txt:			\
  exists/python/build/ss_functions_test.py
	date
	$(python_from_here) python/build/ss_functions_test.py	\
          $(config_file)

output/test/recip-$(ss)/people_3_income_taxish.txt:	\
  $(people_3_income_taxish)                             \
  exists/python/build/people_3_income_taxish_test.py
	date
	$(python_from_here)				\
          python/build/people_3_income_taxish_test.py	\
          $(config_file)

# PITFALL: Sample size is hardcoded to 1, because otherwise
# certain rare values would never be encountered.
output/test/recip-1/purchase_inputs.txt: \
  $(input_subsamples) \
  exists/python/build/purchases/input_test.py
	date
	$(python_from_here) python/build/purchases/input_test.py \
          $(config_file)

output/test/recip-$(ss)/vat_rates.txt:	\
  $(vat_rates.py)			\
  exists/python/build/vat_rates_test.py
	$(python_from_here) python/build/vat_rates_test.py \
          $(config_file)
